import React, { useState } from "react";
import { View, Text, TouchableOpacity, Animated } from "react-native";
import Svg, { Path, G, ClipPath, Defs, Rect } from "react-native-svg";
import { PlusIcon, CloseIcon } from "./Icons";

const AddNoteIcon: React.FC = () => (
  <Svg width="16" height="17" viewBox="0 0 16 17" fill="none">
    <G clipPath="url(#clip0_1_1417)">
      <Path
        d="M12.6666 8.53064C12.298 8.53064 12 8.82936 12 9.19727V14.5306C12 14.898 11.7013 15.1973 11.3334 15.1973H2C1.63197 15.1973 1.33337 14.898 1.33337 14.5306V5.19727C1.33337 4.82995 1.63197 4.53064 2 4.53064H7.33337C7.70203 4.53064 8 4.23195 8 3.86402C8 3.49598 7.70203 3.19727 7.33337 3.19727H2C0.897344 3.19727 0 4.09461 0 5.19727V14.5306C0 15.6333 0.897344 16.5306 2 16.5306H11.3334C12.436 16.5306 13.3334 15.6333 13.3334 14.5306V9.19727C13.3334 8.82864 13.0352 8.53064 12.6666 8.53064Z"
        fill="black"
      />
      <Path
        d="M6.25063 7.9234C6.2043 7.96995 6.17256 8.02901 6.15932 8.09334L5.68801 10.4508C5.66604 10.56 5.70069 10.6727 5.77932 10.752C5.81035 10.783 5.84716 10.8075 5.88767 10.8242C5.92817 10.8409 5.97157 10.8494 6.01538 10.8493C6.03663 10.8493 6.05873 10.8474 6.08069 10.8427L8.43738 10.3714C8.50269 10.358 8.56201 10.3267 8.60804 10.28L13.8827 5.0053L11.526 2.64874L6.25063 7.9234ZM15.512 1.01877C14.8621 0.368742 13.8047 0.368742 13.1553 1.01877L12.2327 1.94137L14.5894 4.29805L15.512 3.37534C15.8267 3.06137 16 2.64265 16 2.19734C16 1.75202 15.8267 1.33334 15.512 1.01877Z"
        fill="black"
      />
    </G>
    <Defs>
      <ClipPath id="clip0_1_1417">
        <Rect
          width="16"
          height="16"
          fill="white"
          transform="translate(0 0.5)"
        />
      </ClipPath>
    </Defs>
  </Svg>
);

const ImportImageIcon: React.FC = () => (
  <Svg width="16" height="17" viewBox="0 0 16 17" fill="none">
    <G clipPath="url(#clip0_1_1425)">
      <Path
        d="M7.33331 5.83341V6.50008C7.33331 6.67689 7.26308 6.84646 7.13805 6.97149C7.01303 7.09651 6.84346 7.16675 6.66665 7.16675H5.99998V5.83341H7.33331ZM14.6666 3.83341V9.83342H12.38L10.6266 7.79341L8.58665 9.83342L7.99998 10.4201L6.66665 11.7534L4.66665 9.75342L2.66665 11.7534V12.5001H7.99998V13.8334H1.99998C1.82317 13.8334 1.6536 13.7632 1.52858 13.6382C1.40355 13.5131 1.33331 13.3436 1.33331 13.1667V3.83341C1.33331 3.6566 1.40355 3.48703 1.52858 3.36201C1.6536 3.23699 1.82317 3.16675 1.99998 3.16675H14C14.1768 3.16675 14.3464 3.23699 14.4714 3.36201C14.5964 3.48703 14.6666 3.6566 14.6666 3.83341ZM13.3333 4.50008H2.66665V9.86675L4.66665 7.86675L6.66665 9.86675L10.7066 5.83341L13.3333 8.90008V4.50008ZM13.3333 16.5001L16 13.8334L15.0533 12.8867L14 13.9467V11.1667H12.6666V13.9467L11.6066 12.8867L10.6666 13.8334L13.3333 16.5001Z"
        fill="black"
      />
    </G>
    <Defs>
      <ClipPath id="clip0_1_1425">
        <Rect
          width="16"
          height="16"
          fill="white"
          transform="translate(0 0.5)"
        />
      </ClipPath>
    </Defs>
  </Svg>
);

const ImportPDFIcon: React.FC = () => (
  <Svg width="16" height="17" viewBox="0 0 16 17" fill="none">
    <Path
      d="M13.3334 12.4999H12.6666V11.8333C12.6612 11.6601 12.5886 11.4958 12.4642 11.3752C12.3398 11.2546 12.1733 11.1871 12 11.1871C11.8267 11.1871 11.6602 11.2546 11.5358 11.3752C11.4114 11.4958 11.3388 11.6601 11.3334 11.8333V12.4999H10.6666C10.4897 12.4999 10.3202 12.5701 10.1951 12.6952C10.0701 12.8202 9.99984 12.9898 9.99984 13.1666C9.99984 13.3434 10.0701 13.513 10.1951 13.638C10.3202 13.7631 10.4897 13.8333 10.6666 13.8333H11.3334V14.4999C11.3334 14.5874 11.3507 14.6741 11.3842 14.755C11.4177 14.8358 11.4668 14.9093 11.5287 14.9712C11.5906 15.0331 11.664 15.0822 11.7449 15.1157C11.8258 15.1492 11.9125 15.1664 12 15.1664C12.0875 15.1664 12.1742 15.1492 12.2551 15.1157C12.336 15.0822 12.4094 15.0331 12.4713 14.9712C12.5332 14.9093 12.5823 14.8358 12.6158 14.755C12.6493 14.6741 12.6666 14.5874 12.6666 14.4999V13.8333H13.3334C13.5103 13.8333 13.6798 13.7631 13.8049 13.638C13.9299 13.513 14.0002 13.3434 14.0002 13.1666C14.0002 12.9898 13.9299 12.8202 13.8049 12.6952C13.6798 12.5701 13.5103 12.4999 13.3334 12.4999ZM8.66656 13.8333H4C3.91244 13.8333 3.82574 13.8161 3.74484 13.7826C3.66395 13.749 3.59046 13.6999 3.52856 13.638C3.46666 13.5761 3.41757 13.5025 3.38409 13.4216C3.35061 13.3407 3.3334 13.254 3.33344 13.1664V3.83333C3.3334 3.74577 3.35061 3.65906 3.38409 3.57815C3.41757 3.49724 3.46666 3.42372 3.52856 3.36179C3.59046 3.29986 3.66395 3.25073 3.74484 3.21722C3.82574 3.1837 3.91244 3.16645 4 3.16645H7.33344V5.16645C7.33344 5.69688 7.54415 6.20559 7.91923 6.58066C8.2943 6.95573 8.80301 7.16645 9.33344 7.16645H11.3334V9.16645C11.3334 9.34323 11.4037 9.51277 11.5287 9.63778C11.6537 9.76278 11.8232 9.83301 12 9.83301C12.1768 9.83301 12.3463 9.76278 12.4713 9.63778C12.5963 9.51277 12.6666 9.34323 12.6666 9.16645V6.45989C12.6596 6.39859 12.6462 6.3382 12.6266 6.27973V6.21989C12.5946 6.15139 12.5519 6.08842 12.5002 6.03333L8.50016 2.03333C8.44499 1.98143 8.38191 1.93866 8.31328 1.90661C8.29126 1.90277 8.26874 1.90277 8.24672 1.90661C8.1819 1.87184 8.11221 1.84703 8.04 1.83301H4C3.46957 1.83301 2.96086 2.04372 2.58579 2.41879C2.21071 2.79387 2 3.30257 2 3.83301V13.1664C2 13.6969 2.21071 14.2056 2.58579 14.5807C2.96086 14.9557 3.46957 15.1664 4 15.1664H8.66656C8.84334 15.1664 9.01288 15.0962 9.13789 14.9712C9.26289 14.8462 9.33312 14.6767 9.33312 14.4999C9.33312 14.3231 9.26289 14.1536 9.13789 14.0286C9.01288 13.9036 8.84334 13.8333 8.66656 13.8333ZM8.66656 4.10661L10.3933 5.83333H9.33344C9.24585 5.83337 9.15911 5.81615 9.07819 5.78265C8.99726 5.74915 8.92372 5.70003 8.86179 5.6381C8.79986 5.57616 8.75074 5.50263 8.71724 5.4217C8.68374 5.34077 8.66652 5.25404 8.66656 5.16645V4.10661ZM5.33344 5.83333C5.15666 5.83333 4.98712 5.90355 4.86211 6.02856C4.73711 6.15356 4.66688 6.3231 4.66688 6.49989C4.66688 6.67667 4.73711 6.84621 4.86211 6.97122C4.98712 7.09622 5.15666 7.16645 5.33344 7.16645H6C6.17678 7.16645 6.34632 7.09622 6.47133 6.97122C6.59633 6.84621 6.66656 6.67667 6.66656 6.49989C6.66656 6.3231 6.59633 6.15356 6.47133 6.02856C6.34632 5.90355 6.17678 5.83333 6 5.83333H5.33344ZM8.66656 11.1664H5.33344C5.15661 11.1664 4.98703 11.2367 4.862 11.3617C4.73696 11.4868 4.66672 11.6563 4.66672 11.8332C4.66672 12.01 4.73696 12.1796 4.862 12.3046C4.98703 12.4296 5.15661 12.4999 5.33344 12.4999H8.66656C8.84339 12.4999 9.01297 12.4296 9.138 12.3046C9.26304 12.1796 9.33328 12.01 9.33328 11.8332C9.33328 11.6563 9.26304 11.4868 9.138 11.3617C9.01297 11.2367 8.84339 11.1664 8.66656 11.1664ZM9.33344 8.49989H5.33344C5.15661 8.49989 4.98703 8.57013 4.862 8.69516C4.73696 8.8202 4.66672 8.98978 4.66672 9.16661C4.66672 9.34343 4.73696 9.51301 4.862 9.63805C4.98703 9.76308 5.15661 9.83333 5.33344 9.83333H9.33344C9.51026 9.83333 9.67985 9.76308 9.80488 9.63805C9.92992 9.51301 10.0002 9.34343 10.0002 9.16661C10.0002 8.98978 9.92992 8.8202 9.80488 8.69516C9.67985 8.57013 9.51026 8.49989 9.33344 8.49989Z"
      fill="black"
    />
  </Svg>
);

const CreateFolderIcon: React.FC = () => (
  <Svg width="16" height="17" viewBox="0 0 16 17" fill="none">
    <Path
      d="M15.7576 10.6043C15.7576 9.00187 14.4534 7.69763 12.8509 7.69763C11.2485 7.69763 9.94427 9.00187 9.94427 10.6043C9.94427 12.2067 11.2485 13.511 12.8509 13.511C12.9188 13.511 12.9843 13.5061 13.0521 13.5013C12.9188 13.8916 12.56 14.1582 12.1382 14.1582H1.86185C1.46185 14.1849 0.780634 13.7994 0.916392 12.9801L2.44851 6.07096H14.7103L14.4 7.46248C14.3612 7.63702 14.4703 7.80914 14.6449 7.84793C14.8194 7.88429 14.9915 7.77763 15.0303 7.60308L15.4255 5.81884C15.4473 5.72429 15.4303 5.46005 15.1103 5.42611H13.8182V3.81642C13.8182 3.63702 13.6728 3.49399 13.4958 3.49399H5.55397L4.35639 2.29642C4.29579 2.23096 4.21336 2.19702 4.12609 2.19702H0.574573C0.395179 2.19702 0.252149 2.34248 0.252149 2.51945V13.0964C0.176998 13.6685 0.615786 14.7425 1.86185 14.8031H12.1358C12.8994 14.8031 13.5467 14.2819 13.714 13.5376L13.7528 13.3655C14.914 12.9873 15.7576 11.8916 15.7576 10.6043ZM3.99276 2.84187L5.19033 4.03945C5.25094 4.10005 5.33336 4.13399 5.41821 4.13399H13.1709V5.42126H2.18912C2.03882 5.42126 1.90548 5.52551 1.87397 5.67339L0.896998 10.0782V2.84187H3.99276ZM12.8509 12.8661C11.6049 12.8661 10.5891 11.8504 10.5891 10.6043C10.5891 9.35823 11.6049 8.34248 12.8509 8.34248C14.097 8.34248 15.1128 9.35823 15.1128 10.6043C15.1103 11.8504 14.097 12.8661 12.8509 12.8661Z"
      fill="black"
    />
    <Path
      d="M14 10.2819H13.1733V9.45524C13.1733 9.41289 13.165 9.37097 13.1488 9.33185C13.1326 9.29273 13.1088 9.25719 13.0789 9.22725C13.049 9.19731 13.0134 9.17356 12.9743 9.15736C12.9352 9.14115 12.8933 9.13281 12.8509 9.13281C12.8086 9.13281 12.7666 9.14115 12.7275 9.15736C12.6884 9.17356 12.6529 9.19731 12.6229 9.22725C12.593 9.25719 12.5692 9.29273 12.553 9.33185C12.5368 9.37097 12.5285 9.41289 12.5285 9.45524V10.2819H11.7018C11.6163 10.2819 11.5343 10.3159 11.4738 10.3763C11.4134 10.4368 11.3794 10.5188 11.3794 10.6043C11.3794 10.6898 11.4134 10.7718 11.4738 10.8323C11.5343 10.8928 11.6163 10.9268 11.7018 10.9268H12.5285V11.7534C12.5285 11.7958 12.5368 11.8377 12.553 11.8768C12.5692 11.9159 12.593 11.9515 12.6229 11.9814C12.6529 12.0113 12.6884 12.0351 12.7275 12.0513C12.7666 12.0675 12.8086 12.0758 12.8509 12.0758C12.8933 12.0758 12.9352 12.0675 12.9743 12.0513C13.0134 12.0351 13.049 12.0113 13.0789 11.9814C13.1088 11.9515 13.1326 11.9159 13.1488 11.8768C13.165 11.8377 13.1733 11.7958 13.1733 11.7534V10.9268H14C14.1794 10.9268 14.3224 10.7813 14.3224 10.6043C14.3224 10.4249 14.1794 10.2819 14 10.2819Z"
      fill="black"
    />
  </Svg>
);

interface MenuItemProps {
  icon: React.ReactNode;
  label: string;
  onPress: () => void;
}

const MenuItem: React.FC<MenuItemProps> = ({ icon, label, onPress }) => {
  return (
    <TouchableOpacity
      onPress={onPress}
      style={{
        height: 25,
        paddingHorizontal: 10,
        paddingVertical: 10,
        backgroundColor: "#F6F6F6",
        borderRadius: 4,
        flexDirection: "row",
        alignItems: "center",
        gap: 8,
      }}
    >
      {icon}
      <Text
        style={{
          fontSize: 10,
          color: "#000000",
          fontFamily: "System",
          fontWeight: "400",
          lineHeight: 20,
        }}
      >
        {label}
      </Text>
    </TouchableOpacity>
  );
};

export const FloatingActionButton: React.FC = () => {
  const [isExpanded, setIsExpanded] = useState(false);

  const menuItems = [
    { icon: <AddNoteIcon />, label: "Add Note" },
    { icon: <ImportImageIcon />, label: "Import Image" },
    { icon: <ImportPDFIcon />, label: "Import PDF" },
    { icon: <CreateFolderIcon />, label: "Create Folder" },
  ];

  const handleToggle = () => {
    setIsExpanded(!isExpanded);
  };

  const handleMenuItemPress = (label: string) => {
    console.log(`${label} pressed`);
    setIsExpanded(false);
  };

  return (
    <View
      style={{
        position: "absolute",
        bottom: 120,
        right: isExpanded ? 16 : 24,
        alignItems: "flex-end",
        gap: 10,
      }}
    >
      {isExpanded && (
        <View
          style={{
            gap: 6,
            alignItems: "flex-end",
            paddingRight: isExpanded ? 24 : 0,
          }}
        >
          {menuItems.map((item, index) => (
            <MenuItem
              key={index}
              icon={item.icon}
              label={item.label}
              onPress={() => handleMenuItemPress(item.label)}
            />
          ))}
        </View>
      )}

      <TouchableOpacity
        onPress={handleToggle}
        style={{
          width: 56,
          height: 56,
          borderRadius: 28,
          backgroundColor: isExpanded ? "#F6F6F6" : "#FFFFFF",
          borderWidth: isExpanded ? 0 : 1,
          borderColor: "#EAEAEA",
          justifyContent: "center",
          alignItems: "center",
          shadowColor: "#000000",
          shadowOffset: { width: 0, height: 2 },
          shadowOpacity: 0.1,
          shadowRadius: 4,
          elevation: 4,
        }}
      >
        {isExpanded ? <CloseIcon /> : <PlusIcon />}
      </TouchableOpacity>
    </View>
  );
};
